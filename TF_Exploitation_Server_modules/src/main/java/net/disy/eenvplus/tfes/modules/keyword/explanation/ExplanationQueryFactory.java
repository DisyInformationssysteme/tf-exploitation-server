//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.keyword.explanation;

import net.disy.eenvplus.tfes.core.api.query.IDescribeConceptQuery;

import org.springframework.stereotype.Component;

import com.hp.hpl.jena.query.Query;

// NOT_PUBLISHED
@Component
public class ExplanationQueryFactory {

  private enum Builders {
    SIMPLE {
      @Override
      boolean isApplicable(IDescribeConceptQuery query) {
        return !query.isSourceActive() && !query.isCrossWalkingActive();
      }

      @Override
      Query createQuery(IDescribeConceptQuery query) {
        return SimpleExplanationQueryBuilder
            .createConceptQuery(query.getConcept())
            .withLimit(query.getMaxCount())
            .withSchemas(query.getThesauri())
            .withLanguages(query.getLanguages())
            .build();
      }

    },
    SOURCE {

      @Override
      boolean isApplicable(IDescribeConceptQuery query) {
        return query.isSourceActive() && !query.isCrossWalkingActive();
      }

      @Override
      Query createQuery(IDescribeConceptQuery query) {
        return SourceExplanationQueryBuilder
            .createConceptQuery(query.getConcept())
            .withLimit(query.getMaxCount())
            .withSchemas(query.getThesauri())
            .withLanguages(query.getLanguages())
            .build();
      }
    },
    CROSS_WALKING {

      @Override
      boolean isApplicable(IDescribeConceptQuery query) {
        return !query.isSourceActive() && query.isCrossWalkingActive();
      }

      @Override
      Query createQuery(IDescribeConceptQuery query) {
        return CrossWalkingSimpleExplanationQueryBuilder
            .createConceptQuery(query.getConcept())
            .withLimit(query.getMaxCount())
            .withSchemas(query.getThesauri())
            .withLanguages(query.getLanguages())
            .build();
      }
    },
    CROSS_WALKING_SOURCE {

      @Override
      boolean isApplicable(IDescribeConceptQuery query) {
        return query.isSourceActive() && query.isCrossWalkingActive();
      }

      @Override
      Query createQuery(IDescribeConceptQuery query) {
        return CrossWalkingSourceExplanationQueryBuilder
            .createConceptQuery(query.getConcept())
            .withLimit(query.getMaxCount())
            .withSchemas(query.getThesauri())
            .withLanguages(query.getLanguages())
            .build();
      }
    };

    abstract boolean isApplicable(IDescribeConceptQuery query);

    abstract Query createQuery(IDescribeConceptQuery query);

  }

  public Query createQuery(IDescribeConceptQuery query) {
    for (Builders builder : Builders.values()) {
      if (builder.isApplicable(query)) {
        return builder.createQuery(query);
      }

    }
    throw new IllegalStateException("No Query Builder found."); //$NON-NLS-1$
  }
}
