//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.module;

import static java.util.Arrays.asList;
import static org.mockito.Matchers.argThat;
import static org.mockito.Mockito.when;

import java.util.Collection;

import net.disy.eenvplus.tfes.core.api.modules.ISuggestionProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.query.ISuggestionQuery;
import net.disy.eenvplus.tfes.core.api.response.ISuggestion;

import org.hamcrest.Matcher;

// NOT_PUBLISHED

public class SuggestionProviderServiceModuleMockBuilder
    extends
    AbstractServiceModulMockBuilder<ISuggestionProviderServiceModule, ISuggestionQuery, Collection<ISuggestion>> {

  private SuggestionProviderServiceModuleMockBuilder(
      Class<ISuggestionProviderServiceModule> moduleClass,
      String moduleId) {
    super(moduleClass, moduleId);
  }

  public static SuggestionProviderServiceModuleMockBuilder createMock(String moduleId) {
    return new SuggestionProviderServiceModuleMockBuilder(
        ISuggestionProviderServiceModule.class,
        moduleId);
  }

  public AbstractServiceModulMockBuilder<ISuggestionProviderServiceModule, ISuggestionQuery, Collection<ISuggestion>> withAnswer(
      Matcher<ISuggestionQuery> query,
      ISuggestion... suggestions) {
    return withAnswer(query, asList(suggestions));
  }

  @Override
  protected void registerQueryResult(
      ISuggestionProviderServiceModule module,
      Matcher<ISuggestionQuery> matcher,
      Collection<ISuggestion> suggestions) {
    when(module.getSuggestions(argThat(matcher))).thenReturn(createCallable(suggestions));
  }

}
