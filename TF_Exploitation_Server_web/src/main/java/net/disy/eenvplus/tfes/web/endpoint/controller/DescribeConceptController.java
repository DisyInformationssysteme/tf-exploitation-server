//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.web.endpoint.controller;

import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.CONCEPT;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.CROSS_WALKING;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.EXTRA_PARAMS;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.LANGUAGES;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.MAX_COUNT;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.SERVICE;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.SOURCE;
import static net.disy.eenvplus.tfes.web.api.core.RestMethodParameters.THESAURI;
import static net.disy.eenvplus.tfes.web.endpoint.query.ServiceQueryBuilder.createConceptQuery;
import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.response.IConceptDescription;
import net.disy.eenvplus.tfes.core.api.service.IServiceManager;
import net.disy.eenvplus.tfes.web.api.core.RestMethodParameters;
import net.disy.eenvplus.tfes.web.endpoint.core.ISelfDescribingOperation;
import net.disy.eenvplus.tfes.web.endpoint.core.OperationDescription;
import net.disy.eenvplus.tfes.web.endpoint.query.ServiceQuery;
import net.disy.eenvplus.tfes.web.validation.api.IConceptQueryValidator;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.env.Environment;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.fasterxml.jackson.annotation.JsonRawValue;
import com.fasterxml.jackson.annotation.JsonValue;

// NOT_PUBLISHED

@RestController
@RequestMapping("${rest.describe.concept.path}")
public class DescribeConceptController implements ISelfDescribingOperation {

  private static final String PATH_DESCRIBE_CONCEPT = "rest.describe.concept.path"; //$NON-NLS-1$

  @Autowired
  IServiceManager serviceManager;

  @Autowired
  private Environment environment;

  @Autowired
  private IConceptQueryValidator queryValidator;

  @Override
  public OperationDescription getOperationDescription() {
    return OperationDescription.Builder
        .createDescriptionFor(
            environment.getProperty(PATH_DESCRIBE_CONCEPT),
            environment.getProperty(PATH_DESCRIBE_CONCEPT))
        .withRequestMethod(RequestMethod.GET)
        .withServiceModules(serviceManager.getDescribeContextDescriptions())
        .withStringParameter(RestMethodParameters.CONCEPT)
        .withStringParameter(THESAURI)
        .withStringParameter(SERVICE)
        .withStringParameter(LANGUAGES)
        .withBooleanParameter(CROSS_WALKING)
        .withBooleanParameter(SOURCE)
        .build();
  }

  @RequestMapping(method = RequestMethod.GET, produces = "application/json; charset=UTF-8")
  public Json getConceptDescription(
      @RequestParam(value = CONCEPT) String concept,
      @RequestParam(value = MAX_COUNT, defaultValue = "0") int maxCount,
      @RequestParam(value = THESAURI, defaultValue = "") String thesauri,
      @RequestParam(value = SERVICE, defaultValue = "") String service,
      @RequestParam(value = LANGUAGES, defaultValue = "") String languages,
      @RequestParam(value = CROSS_WALKING, defaultValue = "false") boolean crossWalkingActive,
      @RequestParam(value = SOURCE, defaultValue = "false") boolean sourceActive,
      @RequestParam(value = EXTRA_PARAMS, defaultValue = "") String extraParams)
      throws ServiceException {

    ServiceQuery query = createConceptQuery(concept)
        .withMaxCount(maxCount)
        .withThesauri(thesauri)
        .withServiceModules(service)
        .withLanguages(languages)
        .withExtraParameters(extraParams)
        .withCrossWalking(crossWalkingActive)
        .withSource(sourceActive)
        .build();
    queryValidator.validate(query);
    IConceptDescription description = serviceManager.describeConcept(query);
    return new Json(description.getResponse());
  }

  class Json {
    private final String value;

    public Json(String value) {
      this.value = value;
    }

    @JsonValue
    @JsonRawValue
    public String value() {
      return value;
    }
  }

}
