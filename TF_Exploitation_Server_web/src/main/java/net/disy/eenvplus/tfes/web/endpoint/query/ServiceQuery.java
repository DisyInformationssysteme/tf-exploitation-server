//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.web.endpoint.query;

import java.util.List;
import java.util.Map;

import net.disy.eenvplus.tfes.core.api.query.IDescribeConceptQuery;
import net.disy.eenvplus.tfes.core.api.query.IRelativeQuery;
import net.disy.eenvplus.tfes.core.api.query.IResolveThesaurusQuery;
import net.disy.eenvplus.tfes.core.api.query.ISuggestionQuery;
import net.disy.eenvplus.tfes.core.api.query.ISynonymQuery;
import net.disy.eenvplus.tfes.core.api.query.ITopMostConceptQuery;

// NOT_PUBLISHED
public class ServiceQuery
    implements
    ISuggestionQuery,
    IDescribeConceptQuery,
    IRelativeQuery,
    ISynonymQuery,
    IResolveThesaurusQuery,
    ITopMostConceptQuery {

  private String concept;
  private String keyword;
  private int maxCount;
  private List<String> thesauri;
  private List<String> serviceModules;
  private List<String> languages;
  private boolean crossWalkingActive;
  private Map<String, Object> extraParameters;
  private boolean sourceActive;

  ServiceQuery(ServiceQueryBuilder builder) {
    this.concept = builder.concept;
    this.keyword = builder.keyword;
    this.maxCount = builder.maxCount;
    this.thesauri = builder.thesauri;
    this.serviceModules = builder.serviceModules;
    this.languages = builder.languages;
    this.crossWalkingActive = builder.crossWalkingActive;
    this.sourceActive = builder.sourceActive;
    this.extraParameters = builder.extraParameters;
  }

  @Override
  public String getConcept() {
    return concept;
  }

  @Override
  public String getKeyword() {
    return keyword;
  }

  @Override
  public int getMaxCount() {
    return maxCount;
  }

  @Override
  public List<String> getThesauri() {
    return thesauri;
  }

  @Override
  public List<String> getServiceModules() {
    return serviceModules;
  }

  @Override
  public List<String> getLanguages() {
    return languages;
  }

  @Override
  public boolean isCrossWalkingActive() {
    return crossWalkingActive;
  }

  @Override
  public boolean isSourceActive() {
    return sourceActive;
  }

  @Override
  public Map<String, Object> getExtraParameters() {
    return extraParameters;
  }

}
