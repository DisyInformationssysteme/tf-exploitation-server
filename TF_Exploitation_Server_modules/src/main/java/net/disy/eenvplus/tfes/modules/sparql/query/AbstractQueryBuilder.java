//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.sparql.query;

import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlQueryBuilder.createSelectDistinctQuery;

import java.util.ArrayList;
import java.util.List;

import com.hp.hpl.jena.query.Query;
import com.hp.hpl.jena.sparql.syntax.Element;

// NOT_PUBLISHED
public abstract class AbstractQueryBuilder<T extends AbstractQueryBuilder<T>> {

  private List<String> schemas = new ArrayList<>();
  private List<String> languages = new ArrayList<>();
  private int limit;

  protected AbstractQueryBuilder() {
    super();
  }

  protected abstract T getThis();

  protected abstract Element createBody();

  protected abstract SparqlQueryBuilder adapt(SparqlQueryBuilder builder);

  public T withLimit(int limit) {
    this.limit = limit;
    return getThis();
  }

  public T withSchemas(List<String> schemas) {
    this.schemas = schemas;
    return getThis();
  }

  public T withLanguages(List<String> languages) {
    this.languages = languages;
    return getThis();
  }

  public Query build() {
    SparqlQueryBuilder defaultBuilder = createSelectDistinctQuery()
        .withBody(createBody())
        .withLimit(getLimit());
    return adapt(defaultBuilder).getQuery();

  }

  protected List<String> getSchemas() {
    return schemas;
  }

  protected List<String> getLanguages() {
    return languages;
  }

  protected int getLimit() {
    return limit;
  }

}