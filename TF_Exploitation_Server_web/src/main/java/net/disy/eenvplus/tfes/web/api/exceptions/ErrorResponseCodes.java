//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.web.api.exceptions;

import java.text.MessageFormat;

import org.springframework.http.HttpStatus;

// NOT_PUBLISHED
public enum ErrorResponseCodes implements IErrorResponseCode {
  SYNTAX_ERROR(10, ErrorResponseMessages.getString("error.syntax.error"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  MISSING_PARAMETER(15,
      ErrorResponseMessages.getString("error.missing.parameter"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  UNKNOWN_VALUE(20, ErrorResponseMessages.getString("error.unknown.value"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  UNKNOWN_CONCEPT(21,
      ErrorResponseMessages.getString("error.unknown.concept"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  UNKNOWN_THESAURI(22,
      ErrorResponseMessages.getString("error.unkown.thesauri"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  UNKNOWN_SERVICE(23,
      ErrorResponseMessages.getString("error.unknown.service.module"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  UNKNOWN_LANGUAGE(24,
      ErrorResponseMessages.getString("error.unknown.language"), HttpStatus.BAD_REQUEST), // //$NON-NLS-1$
  UNPRIVILEGED_SPARQL(50,
      ErrorResponseMessages.getString("error.insufficient.sparql.privileges"), HttpStatus.FORBIDDEN), // //$NON-NLS-1$
  INTERNAL(
      80,
      ErrorResponseMessages.getString("error.internal.server.error"), HttpStatus.INTERNAL_SERVER_ERROR), // //$NON-NLS-1$
  LOST_CONNECTION_SPARQL(90, ErrorResponseMessages.getString("error.lost.sparql.connection"), //$NON-NLS-1$
      HttpStatus.SERVICE_UNAVAILABLE);

  private final int code;
  private final String format;
  private final HttpStatus httpStatus;

  private ErrorResponseCodes(int code, String format, HttpStatus httpStatus) {
    this.code = code;
    this.format = format;
    this.httpStatus = httpStatus;
  }

  @Override
  public final int getCode() {
    return code;
  }

  @Override
  public final String createText(Object... arguments) {
    return MessageFormat.format(format, arguments);
  }

  @Override
  public final HttpStatus getHttpStatus() {
    return httpStatus;
  }

}
