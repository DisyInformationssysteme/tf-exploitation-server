//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.configuration;

import static org.junit.Assert.assertFalse;
import static org.junit.Assert.assertTrue;
import static org.mockito.Matchers.anyString;
import static org.mockito.Mockito.when;

import java.util.HashMap;
import java.util.Map;

import org.junit.Before;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;
import org.springframework.context.annotation.ConditionContext;
import org.springframework.core.env.Environment;
import org.springframework.core.type.AnnotatedTypeMetadata;

// NOT_PUBLISHED
@RunWith(MockitoJUnitRunner.class)
@SuppressWarnings("nls")
public class OnEnvironmentPropertyConditionTest {

  private static final String TEST_ATTRIBUTE = "Test Attribute";

  @Mock
  private Environment environment;

  @Mock
  private ConditionContext context;

  @Mock
  private AnnotatedTypeMetadata metadata;

  private Map<String, Object> attributes = new HashMap<>();

  private OnEnvironmentPropertyCondition condition = new OnEnvironmentPropertyCondition();

  @Before
  public void setUp() {
    when(metadata.getAnnotationAttributes(anyString())).thenReturn(attributes);
    when(context.getEnvironment()).thenReturn(environment);
    attributes.put("value", TEST_ATTRIBUTE);
  }

  @Test
  public void matchesWhenConfiguredTrue() {
    when(environment.getProperty(TEST_ATTRIBUTE)).thenReturn("true");

    assertTrue(condition.matches(context, metadata));
  }

  @Test
  public void doesNotMatchWhenConfiguredFalse() {
    when(environment.getProperty(TEST_ATTRIBUTE)).thenReturn("false");

    assertFalse(condition.matches(context, metadata));
  }

  @Test
  public void doesNotMatchWhenNotConfigured() {
    when(environment.getProperty(TEST_ATTRIBUTE)).thenReturn(null);

    assertFalse(condition.matches(context, metadata));
  }

  @Test
  public void doesNotMatchWhenConfiguredWithOtherString() {
    when(environment.getProperty(TEST_ATTRIBUTE)).thenReturn("other");

    assertFalse(condition.matches(context, metadata));
  }

  @Test
  public void doesNotMatchWhenConfiguredWithEmptyString() {
    when(environment.getProperty(TEST_ATTRIBUTE)).thenReturn("");

    assertFalse(condition.matches(context, metadata));
  }

}
