package net.disy.eenvplus.tfes.core.manager;

import static java.util.Arrays.asList;
import static net.disy.eenvplus.tfes.core.config.data.DataSourceConfigurationTestDataFactory.THIS_TEST_SOURCE;
import static net.disy.eenvplus.tfes.core.config.data.DataSourceConfigurationTestUtilities.isThisTestSource;
import static org.hamcrest.Matchers.contains;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.when;

import java.util.Collection;

import net.disy.eenvplus.tfes.core.api.capabilities.IDataSourceConfiguration;
import net.disy.eenvplus.tfes.core.api.modules.IDataSourceConfigurationProviderServiceModule;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class DataSourceProviderTest {

  @Mock
  private IDataSourceConfigurationProviderServiceModule service;

  @InjectMocks
  private DataSourceProvider dataSourceProvider;

  @Test
  public void takesConfiguredSources() throws Exception {
    dataSourceProvider.setConfiguredSources(asList(THIS_TEST_SOURCE));

    Collection<IDataSourceConfiguration> sources = dataSourceProvider.getSources();

    assertThat(sources, contains(isThisTestSource()));
  }

  @Test
  public void takesServiceSources() throws Exception {
    when(service.getConfigurations()).thenReturn(asList(THIS_TEST_SOURCE));

    Collection<IDataSourceConfiguration> sources = dataSourceProvider.getSources();

    assertThat(sources, contains(isThisTestSource()));
  }

}
