package net.disy.eenvplus.tfes.modules.core;

import static org.hamcrest.Matchers.instanceOf;
import static org.hamcrest.Matchers.is;
import static org.hamcrest.Matchers.isA;
import static org.junit.Assert.assertThat;
import static org.mockito.Mockito.when;
import net.disy.eenvplus.tfes.core.api.exceptions.ForbiddenServiceException;
import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.exceptions.UnreachableServiceException;

import org.apache.http.HttpStatus;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

import com.hp.hpl.jena.sparql.engine.http.QueryExceptionHTTP;

@RunWith(MockitoJUnitRunner.class)
public class SparqlExceptionFactoryTest {

  private static final String TEST_ADDRESS = "Testadresse"; //$NON-NLS-1$

  private static final int COMMON_RESPONSE_CODE = HttpStatus.SC_INTERNAL_SERVER_ERROR;

  @Mock
  private QueryExceptionHTTP jenaException;

  @Test
  public void wrapCommonException() throws Exception {
    when(jenaException.getResponseCode()).thenReturn(COMMON_RESPONSE_CODE);

    ServiceException wrappedException = SparqlExceptionFactory.wrap(TEST_ADDRESS, jenaException);

    assertThat(wrappedException, isA(ServiceException.class));
  }

  @Test
  public void wrapNoAccessException() throws Exception {
    when(jenaException.getResponseCode()).thenReturn(HttpStatus.SC_FORBIDDEN);

    ServiceException wrappedException = SparqlExceptionFactory.wrap(TEST_ADDRESS, jenaException);

    assertThat(wrappedException, instanceOf(ForbiddenServiceException.class));
  }

  @Test
  public void wrapUnreachableException() throws Exception {
    when(jenaException.getResponseCode()).thenReturn(HttpStatus.SC_NOT_FOUND);

    ServiceException wrappedException = SparqlExceptionFactory.wrap(TEST_ADDRESS, jenaException);

    assertThat(wrappedException, instanceOf(UnreachableServiceException.class));
    assertThat(((UnreachableServiceException) wrappedException).getAddress(), is(TEST_ADDRESS));
  }
}
