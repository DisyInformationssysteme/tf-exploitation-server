//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.module;

import static java.util.Arrays.asList;
import static org.mockito.Matchers.argThat;
import static org.mockito.Mockito.when;

import java.util.Collection;

import net.disy.eenvplus.tfes.core.api.modules.ITopMostConceptProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.query.ITopMostConceptQuery;
import net.disy.eenvplus.tfes.core.api.response.ITopMostConcept;

import org.hamcrest.Matcher;

// NOT_PUBLISHED

public class TopMostConceptProviderServiceModuleMockBuilder
    extends
    AbstractServiceModulMockBuilder<ITopMostConceptProviderServiceModule, ITopMostConceptQuery, Collection<ITopMostConcept>> {

  private TopMostConceptProviderServiceModuleMockBuilder(
      Class<ITopMostConceptProviderServiceModule> moduleClass,
      String moduleId) {
    super(moduleClass, moduleId);
  }

  public static TopMostConceptProviderServiceModuleMockBuilder createMock(String moduleId) {
    return new TopMostConceptProviderServiceModuleMockBuilder(
        ITopMostConceptProviderServiceModule.class,
        moduleId);
  }

  public AbstractServiceModulMockBuilder<ITopMostConceptProviderServiceModule, ITopMostConceptQuery, Collection<ITopMostConcept>> withAnswer(
      Matcher<ITopMostConceptQuery> query,
      ITopMostConcept... concepts) {
    return withAnswer(query, asList(concepts));
  }

  @Override
  protected void registerQueryResult(
      ITopMostConceptProviderServiceModule module,
      Matcher<ITopMostConceptQuery> matcher,
      Collection<ITopMostConcept> concepts) {
    when(module.getTopMostConcepts(argThat(matcher))).thenReturn(createCallable(concepts));
  }

}
