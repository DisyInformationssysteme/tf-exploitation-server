//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.web.api.rest;

import java.util.Collection;
import java.util.List;

import org.hamcrest.FeatureMatcher;
import org.hamcrest.Matcher;

// NOT_PUBLISHED
public class RestApiTopMostConceptMatcher {

  private RestApiTopMostConceptMatcher() {
  }

  public static Matcher<? super RestApiTopMostConcepts> hasTopMostConcepts(
      Matcher<Iterable<? extends RestApiTopMostConcept>> expected) {
    return new FeatureMatcher<RestApiTopMostConcepts, Collection<RestApiTopMostConcept>>(
        expected,
        "TopMostConcepts", "TopMostConcepts") { //$NON-NLS-1$ //$NON-NLS-2$

      @Override
      protected List<RestApiTopMostConcept> featureValueOf(RestApiTopMostConcepts response) {
        return response.getTopMostConcept();
      }

    };
  }

  public static Matcher<? super RestApiTopMostConcept> hasSkosConceptScheme(
      Matcher<? super RestApiSkosConceptScheme> expected) {
    return new FeatureMatcher<RestApiTopMostConcept, RestApiSkosConceptScheme>(
        expected,
        "Concept Scheme", "Concept Scheme") { //$NON-NLS-1$ //$NON-NLS-2$

      @Override
      protected RestApiSkosConceptScheme featureValueOf(RestApiTopMostConcept response) {
        return response.getSkosConceptScheme();
      }

    };
  }

  public static Matcher<? super RestApiTopMostConcept> hasKeywords(
      Matcher<Iterable<? extends RestApiKeywordObject>> expected) {
    return new FeatureMatcher<RestApiTopMostConcept, Collection<RestApiKeywordObject>>(
        expected,
        "Keywords", "Keywords") { //$NON-NLS-1$ //$NON-NLS-2$

      @Override
      protected List<RestApiKeywordObject> featureValueOf(RestApiTopMostConcept response) {
        return response.getKeyword();
      }

    };
  }

}
