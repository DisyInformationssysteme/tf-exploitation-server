//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.keyword.translation;

import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.CONCEPT;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.LABEL;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.RELATION;
import static net.disy.eenvplus.tfes.modules.sparql.result.ResultFactory.createSynonym;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import net.disy.eenvplus.tfes.core.api.response.ISynonym;

import com.hp.hpl.jena.query.QuerySolution;
import com.hp.hpl.jena.query.ResultSet;

// NOT_PUBLISHED
public class SynonymsResultSetMapper {

  private String sourceLabel;

  private SynonymsResultSetMapper(String sourceLabel) {
    this.sourceLabel = sourceLabel;
  }

  public static SynonymsResultSetMapper create(String sourceLabel) {
    return new SynonymsResultSetMapper(sourceLabel);
  }

  public Collection<ISynonym> map(ResultSet resultSet) {
    List<ISynonym> result = new ArrayList<>();

    while (resultSet.hasNext()) {
      final QuerySolution current = resultSet.next();
      ISynonym synonym = createSynonym(current, LABEL, CONCEPT, RELATION, sourceLabel);
      result.add(synonym);
    }

    return result;
  }

}
