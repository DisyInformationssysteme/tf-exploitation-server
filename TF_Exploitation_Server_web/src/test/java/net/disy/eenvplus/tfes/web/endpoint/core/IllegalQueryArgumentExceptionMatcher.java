package net.disy.eenvplus.tfes.web.endpoint.core;

import net.disy.eenvplus.tfes.web.api.exceptions.IErrorResponseCode;
import net.disy.eenvplus.tfes.web.endpoint.core.IllegalQueryArgumentException;

import org.hamcrest.FeatureMatcher;
import org.hamcrest.Matcher;

public class IllegalQueryArgumentExceptionMatcher {

  public static Matcher<? super IllegalQueryArgumentException> hasResponseCode(
      Matcher<? super IErrorResponseCode> expected) {
    return new FeatureMatcher<IllegalQueryArgumentException, IErrorResponseCode>(
        expected,
        "Error Response", "Error Response") { //$NON-NLS-1$ //$NON-NLS-2$
      @Override
      protected IErrorResponseCode featureValueOf(IllegalQueryArgumentException exception) {
        return exception.getResponseCode();
      }
    };

  }

  public static Matcher<? super IllegalQueryArgumentException> hasArguments(
      Matcher<Object[]> expected) {
    return new FeatureMatcher<IllegalQueryArgumentException, Object[]>(
        expected,
        "Arguments", "Arguments") { //$NON-NLS-1$ //$NON-NLS-2$
      @Override
      protected Object[] featureValueOf(IllegalQueryArgumentException exception) {
        return exception.getArguments();
      }
    };
  }
}
