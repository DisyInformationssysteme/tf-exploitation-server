//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.module;

import static net.disy.eenvplus.tfes.core.util.CollectionUtilities.flatten;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;

import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.modules.ITopMostConceptProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.query.ITopMostConceptQuery;
import net.disy.eenvplus.tfes.core.api.response.ITopMostConcept;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

// NOT_PUBLISHED
@Service
public class TopMostConceptModulesManager
    extends
    AbstractModuleManager<ITopMostConceptProviderServiceModule, ITopMostConceptQuery, Collection<ITopMostConcept>> {

  @Autowired(required = false)
  List<ITopMostConceptProviderServiceModule> topMostConceptModules = new ArrayList<>();

  @Autowired
  private TopMostConceptAggregator aggregator;

  @Override
  protected List<ITopMostConceptProviderServiceModule> getServiceModules() {
    return topMostConceptModules;
  }

  @Override
  protected Callable<Collection<ITopMostConcept>> createCallable(
      ITopMostConceptQuery query,
      ITopMostConceptProviderServiceModule module) {
    return module.getTopMostConcepts(query);
  }

  public Collection<ITopMostConcept> getTopMostConcepts(ITopMostConceptQuery query)
      throws ServiceException {
    Set<Future<Collection<ITopMostConcept>>> futures = submitQuery(query);
    Collection<Collection<ITopMostConcept>> results = retrieveResults(futures);
    Collection<ITopMostConcept> concepts = flatten(results);
    return aggregator.aggregate(concepts);
  }

}
