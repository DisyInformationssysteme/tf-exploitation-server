//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.keyword.explanation;

import static net.disy.eenvplus.tfes.modules.sparql.expression.SparqlExpressionFactory.createIsLiteralExpression;
import static net.disy.eenvplus.tfes.modules.sparql.expression.SparqlExpressionFactory.createMultipleOptionsExpression;
import static net.disy.eenvplus.tfes.modules.sparql.expression.SparqlExpressionFactory.not;
import net.disy.eenvplus.tfes.modules.sparql.expression.SparqlExpressionBuilder;
import net.disy.eenvplus.tfes.modules.sparql.expression.SparqlLanguageExpression;
import net.disy.eenvplus.tfes.modules.sparql.query.AbstractQueryBuilder;

import com.hp.hpl.jena.graph.Node;
import com.hp.hpl.jena.graph.NodeFactory;
import com.hp.hpl.jena.sparql.expr.Expr;
import com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueNode;

// NOT_PUBLISHED

public abstract class AbstractExplanationQueryBuilder<T extends AbstractExplanationQueryBuilder<T>>
    extends
    AbstractQueryBuilder<T> {

  protected static final Node PREDICATE = NodeFactory.createVariable("p"); //$NON-NLS-1$
  protected static final Node OBJECT = NodeFactory.createVariable("o"); //$NON-NLS-1$
  protected static final Node SOURCE = NodeFactory.createVariable("source"); //$NON-NLS-1$
  private String conceptUri;

  protected AbstractExplanationQueryBuilder(String conceptUri) {
    super();
    this.conceptUri = conceptUri;
  }

  protected String getConceptUri() {
    return conceptUri;
  }

  protected Node getConceptUriNode() {
    return NodeFactory.createURI(getConceptUri());
  }

  protected NodeValueNode getConceptUriExpr() {
    return new NodeValueNode(getConceptUriNode());
  }

  protected Expr createNoLiteralOrLanguageExpression() {
    return SparqlExpressionBuilder
        .use(not(createIsLiteralExpression(OBJECT)))
        .or(createMultipleOptionsExpression(new SparqlLanguageExpression(OBJECT), getLanguages()))
        .toExpr();
  }

}