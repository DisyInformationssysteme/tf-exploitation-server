//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.module;

import static net.disy.eenvplus.tfes.core.util.CollectionUtilities.flatten;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.concurrent.Callable;
import java.util.concurrent.Future;

import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.modules.ISuggestionProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.query.ISuggestionQuery;
import net.disy.eenvplus.tfes.core.api.response.ISuggestion;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

// NOT_PUBLISHED

@Service
public class SuggestionModulesManager
    extends
    AbstractModuleManager<ISuggestionProviderServiceModule, ISuggestionQuery, Collection<ISuggestion>> {

  @Autowired(required = false)
  List<ISuggestionProviderServiceModule> suggestionModules = new ArrayList<>();

  @Override
  protected List<ISuggestionProviderServiceModule> getServiceModules() {
    return suggestionModules;
  }

  @Override
  protected Callable<Collection<ISuggestion>> createCallable(
      ISuggestionQuery query,
      ISuggestionProviderServiceModule module) {
    return module.getSuggestions(query);
  }

  public Collection<ISuggestion> getSuggestions(ISuggestionQuery query) throws ServiceException {
    Set<Future<Collection<ISuggestion>>> futures = submitQuery(query);
    Collection<Collection<ISuggestion>> results = retrieveResults(futures);
    return flatten(results);
  }

}
