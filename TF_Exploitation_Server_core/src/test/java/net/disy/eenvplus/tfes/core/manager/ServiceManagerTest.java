package net.disy.eenvplus.tfes.core.manager;

import static org.mockito.Mockito.mock;
import static org.mockito.Mockito.verify;
import net.disy.eenvplus.tfes.core.api.exceptions.ServiceException;
import net.disy.eenvplus.tfes.core.api.query.IDescribeConceptQuery;
import net.disy.eenvplus.tfes.core.api.query.ISuggestionQuery;
import net.disy.eenvplus.tfes.core.api.query.ITopMostConceptQuery;
import net.disy.eenvplus.tfes.core.module.DescribeConceptModulesManager;
import net.disy.eenvplus.tfes.core.module.SuggestionModulesManager;
import net.disy.eenvplus.tfes.core.module.TopMostConceptModulesManager;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.runners.MockitoJUnitRunner;

@RunWith(MockitoJUnitRunner.class)
public class ServiceManagerTest {

  @Mock
  private SuggestionModulesManager suggestionModulesManager;

  @Mock
  private DescribeConceptModulesManager describeConceptModulesManager;

  @Mock
  private TopMostConceptModulesManager topMostConceptModulesManager;

  @InjectMocks
  private ServiceManager serviceManager;

  @Test
  public void delegatesGetSuggestionsDescriptions() {
    serviceManager.getSuggestionsDescriptions();

    verify(suggestionModulesManager).getServiceModuleDescription();
  }

  @Test
  public void delegatesGetSuggestions() throws ServiceException {
    ISuggestionQuery query = mock(ISuggestionQuery.class);

    serviceManager.getSuggestions(query);

    verify(suggestionModulesManager).getSuggestions(query);
  }

  @Test
  public void delegatesGetDescribeConceptDescriptions() {
    serviceManager.getDescribeContextDescriptions();

    verify(describeConceptModulesManager).getServiceModuleDescription();
  }

  @Test
  public void delegatesDescribeConcept() throws ServiceException {
    IDescribeConceptQuery query = mock(IDescribeConceptQuery.class);

    serviceManager.describeConcept(query);

    verify(describeConceptModulesManager).getConceptDescription(query);
  }

  @Test
  public void delegatesGetTopMostConceptDescriptions() {
    serviceManager.getTopMostConceptDescriptions();

    verify(topMostConceptModulesManager).getServiceModuleDescription();
  }

  @Test
  public void delegatesTopMostConcept() throws ServiceException {
    ITopMostConceptQuery query = mock(ITopMostConceptQuery.class);

    serviceManager.getTopMostConcepts(query);

    verify(topMostConceptModulesManager).getTopMostConcepts(query);
  }

}
