//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.modules.topmost;

import static java.util.Arrays.asList;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.CONCEPT;
import static net.disy.eenvplus.tfes.modules.sparql.query.SparqlNodes.TOP_MOST_CONCEPT;
import static net.disy.eenvplus.tfes.modules.sparql.result.ResultFactory.createSuggestion;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;

import net.disy.eenvplus.tfes.core.api.response.ILabelledConcept;
import net.disy.eenvplus.tfes.core.api.response.ITopMostConcept;

import com.hp.hpl.jena.query.QuerySolution;
import com.hp.hpl.jena.query.ResultSet;

// NOT_PUBLISHED
public class TopMostConceptSparqlResultSetMapper {

  private final String schemeLabel;
  private final String topMostConceptLabel;

  private TopMostConceptSparqlResultSetMapper(String schemeLabel, String topMostConceptLabel) {
    this.schemeLabel = schemeLabel;
    this.topMostConceptLabel = topMostConceptLabel;
  }

  public static TopMostConceptSparqlResultSetMapper create(
      String schemeLabel,
      String topMostConceptLabel) {
    return new TopMostConceptSparqlResultSetMapper(schemeLabel, topMostConceptLabel);
  }

  public Collection<ITopMostConcept> map(ResultSet resultSet) {
    List<ITopMostConcept> result = new ArrayList<>();

    while (resultSet.hasNext()) {
      final QuerySolution current = resultSet.next();
      result.add(map(current));
    }
    return result;
  }

  private ITopMostConcept map(final QuerySolution current) {
    return new ITopMostConcept() {

      @Override
      public Collection<ILabelledConcept> getKeywords() {
        ILabelledConcept keyword = createSuggestion(
            current,
            topMostConceptLabel,
            TOP_MOST_CONCEPT,
            null);
        return asList(keyword);
      }

      @Override
      public ILabelledConcept getConceptScheme() {
        return createSuggestion(current, schemeLabel, CONCEPT, null);
      }
    };
  }
}
