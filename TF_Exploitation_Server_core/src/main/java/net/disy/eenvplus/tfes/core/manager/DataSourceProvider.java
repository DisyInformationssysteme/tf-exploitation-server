//Copyright (c) 2014 by Disy Informationssysteme GmbH
package net.disy.eenvplus.tfes.core.manager;

import java.util.Collection;
import java.util.LinkedList;
import java.util.List;

import javax.annotation.PostConstruct;

import net.disy.eenvplus.tfes.core.api.capabilities.IDataSourceConfiguration;
import net.disy.eenvplus.tfes.core.api.modules.IDataSourceConfigurationProviderServiceModule;
import net.disy.eenvplus.tfes.core.api.service.IDataSourceProvider;
import net.disy.eenvplus.tfes.core.config.data.DataSourceConfigurationMerger;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;
import org.springframework.scheduling.annotation.Async;
import org.springframework.stereotype.Service;

// NOT_PUBLISHED
@Service
public class DataSourceProvider implements IDataSourceProvider {

  private static final Logger LOGGER = LoggerFactory.getLogger(DataSourceProvider.class);

  @Autowired
  private IDataSourceConfigurationProviderServiceModule service;

  @Autowired(required = false)
  private List<IDataSourceConfiguration> configuredSources = new LinkedList<>();

  void setConfiguredSources(List<IDataSourceConfiguration> configuredSources) {
    this.configuredSources = configuredSources;
  }

  @PostConstruct
  @Async
  public void initCacheOnStartUp() {
    getSources();
  }

  @Override
  @Cacheable("thesauri")
  public Collection<IDataSourceConfiguration> getSources() {
    return new DataSourceConfigurationMerger()
        .add(configuredSources)
        .add(service.getConfigurations())
        .getSources();
  }

  @Override
  @CacheEvict(value = "thesauri", allEntries = true)
  public void resetCache() {
    LOGGER.debug("Clearing Data Sources Cache"); //$NON-NLS-1$
  }

  @Override
  public String getSparqlEndpointUrl() {
    return service.getSparqlEndpointUrl();
  }

}
